# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
  branches:
    include:
      - master
      - develop
      - release/*
      - features/*
      - hotfix/*
  paths:
    include:
      - api/*
      - app/*
      - core/*
      - integration/*
      - pom.xml

resources:
  - repo: self

variables:

  dockerfileRelativePath: 'Dockerfile'

  # Agent VM image name for Build
  vmImageNameDefault: 'ubuntu-latest'

  # Image Repository Name
  imageRepository: 'bpdmscitizen'

  isToDeploy: $[and(ne(variables['Build.Reason'], 'PullRequest'), or(eq(variables['Build.SourceBranch'], 'refs/heads/master'), startsWith(variables['Build.SourceBranch'], 'refs/heads/release'), startsWith(variables['Build.SourceBranch'], 'refs/heads/hotfix')))]
  isSIT: $[eq(variables['Build.SourceBranch'], 'refs/heads/release/st')]
  isUAT: $[or(eq(variables['Build.SourceBranch'], 'refs/heads/release/uat'), startsWith(variables['Build.SourceBranch'], 'refs/heads/hotfix'))]
  isPROD: $[eq(variables['Build.SourceBranch'], 'refs/heads/master')]

  ${{ if eq(variables['Build.SourceBranch'], 'refs/heads/release/st') }}:
    dockerRegistryServiceConnection: 'cstarregistry-connection'
    containerRegistry: 'cstarregistry.azurecr.io'
    imagePullSecret: 'cstarregistry-auth'
    deployment: 'deployment-sit'
  ${{ if or(eq(variables['Build.SourceBranch'], 'refs/heads/release/uat'), startsWith(variables['Build.SourceBranch'], 'refs/heads/hotfix')) }}:
    dockerRegistryServiceConnection: 'cstaruatregistry-connection'
    containerRegistry: 'cstaruatregistry.azurecr.io'
    imagePullSecret: 'cstaruatregistry-auth'
    deployment: 'deployment-uat'
  ${{ if eq(variables['Build.SourceBranch'], 'refs/heads/master') }}:
    dockerRegistryServiceConnection: 'cstarprodregistry-connection'
    containerRegistry: 'cstarprodregistry.azurecr.io'
    deployment: deployment-prod
    imagePullSecret: 'cstarprodregistry-auth'
  ${{ if and(not(startsWith(variables['Build.SourceBranch'], 'refs/heads/release')), ne(variables['Build.SourceBranch'], 'refs/heads/master'), not(startsWith(variables['Build.SourceBranch'], 'refs/heads/hotfix'))) }}:
    dockerRegistryServiceConnection: 'cstarregistry-connection'

stages:
  - stage: Test
    displayName: Test
    condition: or(eq(variables.isPullRequest, true), and(ne(variables.isSIT, true), ne(variables.isUAT, true), ne(variables.isPROD, true)))
    jobs:
      - job: Test
        displayName: Test
        pool:
          vmImage: $(vmImageNameDefault)
        steps:
          - task: DownloadSecureFile@1
            displayName: 'download settings.xml for Maven'
            name: settingsxml
            inputs:
              secureFile: 'settings.xml'
              retryCount: '2'
          #          - task: SonarCloudPrepare@1
          #              displayName: 'Prepare SonarCloud analysis configuration'
          #              inputs:
          #                SonarCloud: '$(SONARCLOUD_SERVICE_CONN)'
          #                organization: '$(SONARCLOUD_ORG)'
          #                scannerMode: Other
          #                extraProperties: |
          #                  sonar.projectKey=$(SONARCLOUD_PROJECT_KEY)
          #                  sonar.projectName=$(SONARCLOUD_PROJECT_NAME)
          #                  sonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml
          #                  sonar.junit.reportPaths=target/surefire-reports/



          - task: Maven@3
            inputs:
              mavenPomFile: 'pom.xml'
              options: '-B -s $(settingsxml.secureFilePath)'
              publishJUnitResults: true
              testResultsFiles: '**/surefire-reports/TEST-*.xml'
              codeCoverageToolOption: 'JaCoCo'
              codeCoverageClassFilter: '+:it.gov.pagopa.**,-:**.*Config,-:**.model.**,-:**.enums.**,-:**.*Constants,-:**.*Application,-:**.*Test,-:**.*Test.**'
              codeCoverageSourceDirectories: '$(System.DefaultWorkingDirectory)/bpd-ms-citizen'
              javaHomeOption: 'JDKVersion'
              jdkVersionOption: '1.8'
              mavenVersionOption: 'Default'
              mavenOptions: '-Xmx3072m'
              mavenAuthenticateFeed: false
              effectivePomSkip: true
              sonarQubeRunAnalysis: false













#  - task: SonarCloudPublish@1
#      displayName: 'Publish SonarCloud results on build summary'
#      inputs:
#        pollingTimeoutSec: '300'







